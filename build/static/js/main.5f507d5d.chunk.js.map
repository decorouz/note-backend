{"version":3,"sources":["components/Note.js","service/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","noteToShow","filter","map","i","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"2NAYeA,EAVF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,EAApC,O,gBCNAK,EAAU,yDAkBD,EAhBA,WAGb,OAFgBC,IAAMC,IAAIF,GAEXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCN5BK,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAGF,yBAAKd,UAAU,SAASc,ICYlBC,EAjBA,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,uGCuESC,EA7EH,SAAAC,GAAU,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEWF,mBAAS,IAFpB,mBAEZG,EAFY,KAEHC,EAFG,OAGWJ,oBAAS,GAHpB,mBAGZK,EAHY,KAGHC,EAHG,OAIqBN,mBAAS,MAJ9B,mBAIZO,EAJY,KAIEC,EAJF,KAMnBC,qBAAU,WACRC,IAAqB1B,MAAK,SAAA2B,GACxBT,EAASS,QAEV,IAEH,IAsCMC,EAAaP,EAAUJ,EAAQA,EAAMY,QAAO,SAAAvC,GAAI,OAAIA,EAAKG,aAE/D,OACE,6BACE,qCACA,kBAAC,EAAD,CAAce,QAASe,IACvB,4BAAQ3B,QAAS,kBAAM0B,GAAYD,KAAnC,QACQA,EAAU,YAAc,OAEhC,4BACGO,EAAWE,KAAI,SAACxC,EAAMyC,GAAP,OACd,kBAAC,EAAD,CACEC,IAAKD,EACLzC,KAAMA,EACNC,iBAAkB,kBAlCD,SAAAc,GACzB,IAAMf,EAAO2B,EAAMgB,MAAK,SAAAC,GAAC,OAAIA,EAAE7B,KAAOA,KAChC8B,EAAW,eAAQ7C,EAAR,CAAcG,WAAYH,EAAKG,YAEhDiC,EACUrB,EAAI8B,GACXnC,MAAK,SAAAoC,GACJlB,EAASD,EAAMa,KAAI,SAAAxC,GAAI,OAAKA,EAAKe,KAAOA,EAAKf,EAAO8C,SAErDC,OAAM,SAAAC,GACLd,EAAgB,SAAD,OACJlC,EAAKK,QADD,sCAGf4C,YAAW,WACTf,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAK,GAAC,OAAIA,EAAE7B,KAAOA,SAkBRmC,CAAmBlD,EAAKe,WAItD,0BAAMoC,SAxDM,SAAAC,GACdA,EAAMC,iBACN,IAAMxC,EAAY,CAChBR,QAASwB,EACTyB,MAAM,IAAIC,MAAOC,cACjBrD,UAAWsD,KAAKC,SAAW,IAG7BtB,EAAmBvB,GAAWH,MAAK,SAAAoC,GACjClB,EAASD,EAAMgC,OAAOb,IACtBhB,EAAW,SA+CT,2BAAO8B,MAAO/B,EAASgC,SA3CJ,SAAAT,GACvBtB,EAAWsB,EAAMU,OAAOF,UA2CpB,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,QCzENC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5f507d5d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important' : 'make important';\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label} </button>\n    </li>\n  );\n};\n\nexport default Note;\n","import axios from 'axios';\nconst baseUrl = 'https://sheltered-temple-90837.herokuapp.com/api/notes';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update\n};\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","import React from 'react';\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2020\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from './service/notes';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\n\nconst App = props => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const addNote = event => {\n    event.preventDefault();\n    const newObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    };\n\n    noteService.create(newObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => (note.id !== id ? note : returnedNote)));\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter(n => n.id !== id));\n      });\n  };\n\n  const noteToShow = showAll ? notes : notes.filter(note => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <button onClick={() => setShowAll(!showAll)}>\n        show {showAll ? 'important' : 'all'}\n      </button>\n      <ul>\n        {noteToShow.map((note, i) => (\n          <Note\n            key={i}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n/*\nUse effect lets u perform side effects in functions component,\nData fetching\nsetting up subscription,\nmanually changing the DOM in React components...\nFetching data from the serve.\n*/\n"],"sourceRoot":""}